name: "Deployment Vault Server"
env:
  ARM_CLIENT_ID: "${{vars.CLIENT_ID}}"
  ARM_TENANT_ID: "${{vars.TENANT_ID}}"
  ARM_CLIENT_SECRET: "${{secrets.CLIENT_SECRET}}"
  ARM_SUBSCRIPTION_ID: "${{vars.SUBSCRIPTION_ID}}"

on:
  workflow_dispatch:

jobs:
  vault:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ vars.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ vars.SUBSCRIPTION_ID }}","tenantId":"${{ vars.TENANT_ID }}"}'
    - name: check version terraform
      run: terraform --version
    - name: variables terraform
      run: |
        cat >vault/terraform.tfvars <<EOF
        client_id = "${{vars.CLIENT_ID}}"
        tenant_id = "${{vars.TENANT_ID}}"
        client_secret = "${{secrets.CLIENT_SECRET}}"
        subscription_id = "${{vars.SUBSCRIPTION_ID}}"
        public_key = "${{vars.PUBLIC_KEY}}"
        resource_group_name = "${{vars.RESOURCE_GROUP}}"
        domain_label = "${{vars.DOMAIN_LABEL}}"
        EOF
    - name: run deploy terraform script
      run: |
        chmod +x scripts/deploy.sh
        ./scripts/deploy.sh 
    - name: retrieve addr
      run: |
        cd vault
        addr=$(terraform output addr)
        echo "VAULT_ADDR=$(echo "$addr" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
    - name: run vault init script
      run: |
        sleep 60
        chmod +x scripts/token.sh
        ./scripts/token.sh "${{vars.RESOURCE_GROUP}}"
    - name: run nginx init
      run: |
        sleep 10
        chmod +x scripts/nginx.sh
        ./scripts/nginx.sh "${{vars.RESOURCE_GROUP}}"
    - name: vault install
      run: |
        chmod +x scripts/install.sh
        ./scripts/install.sh
    - name: upload configuration
      run: |
        chmod +x scripts/enable_tenant.sh
        ./scripts/enable_tenant.sh ${{ vars.TENANT_NAME }} ${{vars.TENANT_ID}}